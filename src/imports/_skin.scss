%stationery-ruled {
  background: {
    image: linear-gradient($gray-lt-3 1px, transparent 1px);
    position: 0 $base-lead;
    repeat: repeat;
    size: $base-lead $base-lead;
  }
  display: block;
}

%stationery-ruled-list {
  >li:not(:first-child) {
    border-top: 1px solid $gray-lt-3;
  }
}

%stationery-inverted {
  background: $blue-1-dk;
  color: $white-2;
}

%stationery-screen {
  background: $blue-2-lt;
  border: 1px solid $blue-2;
  box-shadow: (
    0 2px $base-line shade(.1),
    0 1px 3px shade(.1),
    inset 0 0 0 1px light(.3)
  );
}

%chrome-field {
  $padding: 5px;
  $weight: 2px;
  $height: 10px;
  $color: rgba($gray-dk-3, .3);

  input {
    background: transparent;
    border: 0;
    border-bottom: $weight solid $color;
    padding: $padding ($padding * 2);

    &:focus {
      outline: 0;
    }
  }

  &::before,
  &::after {
    background: $color;
    content: '\0020';
    display: block;
    height: $height;
    position: relative;
    width: $weight;
  }

  &::before {
    bottom: -28px;
  }

  &::after {
    left: 99%;
    top: -$height;
  }
}

@mixin chrome-button ($bg-clr, $bg-clr-on, $fg-clr, $fg-clr-on, $offset:3px, $padding:5px) {
  $is-inverted: lightness($bg-clr) < 70%;
  $inset-clr: if($is-inverted, light(.2), light(.3));
  $shade-amp: if($is-inverted, 15%, 20%);
  $shade-height: 2px;
  @include text-inset(light(.5), transparent, $fg-clr, $offset);
  background: {
    color: $bg-clr;
    image: linear-gradient(transparent, shade(.1));
  }
  border-radius: $radius-size;
  border: { color: darken($bg-clr, 15%) darken($bg-clr, 20%) darken($bg-clr, 30%); style: solid; width: 1px; }
  box-shadow: (
    inset 0 0 0 1px $inset-clr, // Overall bevel highlight.
    inset 0 1px $inset-clr, // Top bevel highlight.
    0 $shade-height darken($bg-clr, $shade-amp), // Bottom side shadow.
    0 4px 3px shade(.1) // Casted shadow.
  );
  cursor: pointer;
  margin: { bottom: $shade-height; top: 0; }
  padding: $padding ($padding * 2);
  text-align: center;
  text-decoration: none;
  transition: { duration: .3s; property: background-color, color; timing-function: ease-in-out; }
  width: auto;

  &.no-span {
    color: $fg-clr;
    text-shadow: 0 1px light(1);
  }

  &:hover,
  &:focus {
    background-color: $bg-clr-on;
    &.no-span, >span::before {
      color: $fg-clr-on; // Otherwise won't work due to text-inset.
    }
  }

  &:active {
    box-shadow: (
      inset 0 1px $inset-clr, // Top bevel highlight.
      inset 0 -1px 1px shade(.1), // Bottom shadow from depression.
      inset 1px 0 shade(.1), inset -1px 0 shade(.1), // Side shadows from depression.
      0 1px light(.5) // Hole's edge highlight.
    );
    margin: { bottom: 0; top: $shade-height; }
    z-index: 2;
  }
}

%chrome-button {
  @include chrome-button($gray-lt-4, $white-2, $gray-dk-3, $blue-1-lt, 2px);
}

%chrome-button-inverted {
  @include chrome-button($blue-1, $blue-1-lt, $blue-2-lt, light(1));
}

%chrome-segmented {
  >li:not(:first-child)>a {
    @include border-side-radius(left, 0);
  }
  >li:not(:last-child)>a {
    @include border-side-radius(right, 0);
    border-right-width: 0;
  }
}

%chrome-frame {
  background: shade(1);
  border: { width: 1px; style: solid; color: $gray-lt-1; }
  box-shadow: (
    0 5px $base-lead shade(.1),
    0 5px 5px shade(.1),
    inset 0 0 0 1px light(.3),
    inset 0 0 3px $frame-size light(.8)
  );
  padding: $frame-size;
}

%chrome-frame-selectable {
  @extend %chrome-frame;
  cursor: pointer;
  transition: border-color .3s ease-in-out;
  &:hover {
    border: { color: $blue-1-dk; width: $frame-size + 1px; }
    padding: 0;
  }
}

%chrome-ruled {
  box-shadow: (
    inset 0 -1px shade(.1),
    0 1px light(1)
  );
}

%chrome-inline-token {
  background: $blue-2-lt;
  border-bottom: 1px solid $blue-2;
  padding: 0 .3em;
}

%chrome-overlay {
  background: rgba($gray-lt-2, .3);
  border: 1px solid shade(.3);
  box-shadow: (
    0 1px 2px shade(.3),
    inset 0 0 0 1px light(.1)
  );
  color: light(.8);
}
